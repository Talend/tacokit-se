{"swagger":"2.0","info":{"description":"The Function Service allows you to create quick event-driven business logic for you application using Java 8. To create, update, view, and manage functions overall, access to the \"Function Service\" Domain is required. To view developer logs for a function during execution, access to the \"Function Service: Log Access\" Domain is required","version":"v1","title":"Function Service"},"host":"api.workday.com","basePath":"/functionService/v1","schemes":["https"],"tags":[{"name":"Functions","description":"A collection of operations to create, update, and view functions."},{"name":"Exec","description":"A collection of operations that can be used to execute a function."}],"paths":{"/functions":{"get":{"tags":["Functions"],"description":"View functions installed. Secured by: Function Service","produces":["application/json"],"parameters":[{"name":"limit","in":"query","description":"Maximum count of functions to return. Default limit is 100. Maximum limit is 100. Must be a positive integer.","required":false,"type":"number"},{"name":"offset","in":"query","description":"The page offset of functions to list. Default offset is 0. Must be a positive integer or zero.","required":false,"type":"number"}],"responses":{"200":{"description":"List functions in the tenant, ordered by created timestamp (newest first) for the provided limit and offset.","schema":{"$ref":"#/definitions/listFunctionsCollectionResponse"}},"400":{"description":"Optional limit and offset query parameters must be positive numbers when set.","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"403":{"description":"[\"Unauthorized\"], [\"forbidden\"]","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}}}},"post":{"tags":["Functions"],"description":"Create a new function definition. Secured by: Function Service. Currently, you cannot run this Function Service endpoint on the API Explorer. We recommend that you use the Function Service CLI to create a function.","produces":["application/json"],"parameters":[{"in":"body","name":"functionDefinitionCreate","required":true,"schema":{"$ref":"#/definitions/functionDefinitionCreate"}}],"responses":{"201":{"description":"Successful create function response.","schema":{"$ref":"#/definitions/functionDefinitionCreateResponse"}},"400":{"description":"a validation error occurred: [\"Reference ID must contain only a-z, A-Z, 0-9, - (hyphen), or _ (underscore) and have up to maximum length of 128.\"], [\"function name is required\"], [\"function handler is required\"], [\"function runtime is required\"]","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"403":{"description":"The user is forbidden from creating functions.","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"default":{"description":"an error occurred.","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}}}}},"/functions/{id}":{"get":{"tags":["Functions"],"description":"View a function. Secured by: Function Service","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"Id or Reference_Id=[referenceId] of specified function.","required":true,"type":"string"}],"responses":{"200":{"description":"View function response.","schema":{"$ref":"#/definitions/functionDefinitionViewResponse"}},"403":{"description":"The user is forbidden from viewing the function.","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"404":{"description":"Not found. The id or reference id does not exist.","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"default":{"description":"An error occurred.","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}}}},"put":{"tags":["Functions"],"description":"Update a new function definition. Secured by: Function Service. Currently, you cannot run this Function Service endpoint on the API Explorer. We recommend that you use the Function Service CLI to update a function.","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"Id or Reference_Id=[referenceId] of specified function.","required":true,"type":"string"},{"in":"body","name":"functionDefinitionUpdate","required":true,"schema":{"$ref":"#/definitions/functionDefinitionCreate"}}],"responses":{"200":{"description":"Successful update function response.","schema":{"$ref":"#/definitions/functionDefinitionUpdateResponse"}},"400":{"description":"a validation error occurred: [\"id in path does not match id in body\"], [\"Reference ID must contain only a-z, A-Z, 0-9, - (hyphen), or _ (underscore) and have up to maximum length of 128.\"], [\"function name is required\"], [\"function handler is required\"], [\"function runtime is required\"]","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"403":{"description":"The user is forbidden from modifying the function.","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"404":{"description":"Not found. The function does not exist.","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"default":{"description":"an error occurred","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}}}},"delete":{"tags":["Functions"],"description":"Delete a function. Secured by: Function Service","produces":["application/json"],"parameters":[{"name":"id","in":"path","description":"Id or Reference_Id=[referenceId] of specified function.","required":true,"type":"string"}],"responses":{"200":{"description":"Successful delete function response.","schema":{"$ref":"#/definitions/listFunctionsFunctionDefinition"}},"403":{"description":"The user is forbidden from modifying the function.","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"404":{"description":"Not found. The function does not exist.","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"default":{"description":"an error occurred","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}}}}},"/exec/{id}":{"get":{"tags":["Exec"],"description":"Execute a function by proxy. Use the GET endpoint to execute a function that retrieves data. Function Service passes all request parameters to the function at runtime. You can append custom-defined parameters to the path so that your function implementation can process the custom values at runtime. For example, if you invoke \"/exec/Reference_Id=myFunction?myQueryParam=true\", your function receives the query parameter \"myQueryParam=true\" at runtime. If you invoke \"/exec/Reference_Id=myFunction/myPathValue/secondPathValue?myQueryParam=true\", your function receives the path \"myPathValue/secondPathValue\" and the query parameter \"myQueryParam=true\" at runtime.","parameters":[{"name":"id","in":"path","description":"Id or Reference_Id=[referenceId] of specified function.","required":true,"type":"string"},{"name":"wcp_logs","in":"query","description":"When true, the response will be wrapped in a json object which includes logs. See models \\\"logExecResponse\\\" and \\\"logJsonExecResponse\\\". This action is Secured by the \\\"Function Service: Log Access\\\" Domain.","required":false,"type":"boolean"}],"responses":{"403":{"description":"forbidden","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"404":{"description":"not found","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"413":{"description":"request too large","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"429":{"description":"too many requests","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"default":{"description":"The function defined status and content response."}}},"post":{"tags":["Exec"],"description":"Execute a function by proxy. Use the POST endpoint to execute a function that creates data. Function Service passes all request parameters to the function at runtime. You can append custom-defined parameters to the path so that your function implementation can process the custom values at runtime. For example, if you invoke \"/exec/Reference_Id=myFunction?myQueryParam=true\", your function receives the query parameter \"myQueryParam=true\" at runtime. If you invoke \"/exec/Reference_Id=myFunction/myPathValue/secondPathValue?myQueryParam=true\", your function receives the path \"myPathValue/secondPathValue\" and the query parameter \"myQueryParam=true\" at runtime.","parameters":[{"name":"id","in":"path","description":"Id or Reference_Id=[referenceId] of specified function.","required":true,"type":"string"},{"name":"wcp_logs","in":"query","description":"When true, the response will be wrapped in a json object which includes logs. See models \\\"logExecResponse\\\" and \\\"logJsonExecResponse\\\". This action is Secured by the \\\"Function Service: Log Access\\\" Domain.","required":false,"type":"boolean"}],"responses":{"403":{"description":"forbidden","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"404":{"description":"not found","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"413":{"description":"request too large","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"429":{"description":"too many requests","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"default":{"description":"The function defined status and content response."}}},"put":{"tags":["Exec"],"description":"Execute a function by proxy. Use the PUT endpoint to execute a function that updates data. Function Service passes all request parameters to the function at runtime. You can append custom-defined parameters to the path so that your function implementation can process the custom values at runtime. For example, if you invoke \"/exec/Reference_Id=myFunction?myQueryParam=true\", your function receives the query parameter \"myQueryParam=true\" at runtime. If you invoke \"/exec/Reference_Id=myFunction/myPathValue/secondPathValue?myQueryParam=true\", your function receives the path \"myPathValue/secondPathValue\" and the query parameter \"myQueryParam=true\" at runtime.","parameters":[{"name":"id","in":"path","description":"Id or Reference_Id=[referenceId] of specified function.","required":true,"type":"string"},{"name":"wcp_logs","in":"query","description":"When true, the response will be wrapped in a json object which includes logs. See models \\\"logExecResponse\\\" and \\\"logJsonExecResponse\\\". This action is Secured by the \\\"Function Service: Log Access\\\" Domain.","required":false,"type":"boolean"}],"responses":{"403":{"description":"forbidden","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"404":{"description":"not found","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"413":{"description":"request too large","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"429":{"description":"too many requests","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"default":{"description":"The function defined status and content response."}}},"delete":{"tags":["Exec"],"description":"Execute a function by proxy. Use the POST endpoint to execute a function that deletes data. Function Service passes all request parameters to the function at runtime. You can append custom-defined parameters to the path so that your function implementation can process the custom values at runtime. For example, if you invoke \"/exec/Reference_Id=myFunction?myQueryParam=true\", your function receives the query parameter \"myQueryParam=true\" at runtime. If you invoke \"/exec/Reference_Id=myFunction/myPathValue/secondPathValue?myQueryParam=true\", your function receives the path \"myPathValue/secondPathValue\" and the query parameter \"myQueryParam=true\" at runtime.","parameters":[{"name":"id","in":"path","description":"Id or Reference_Id=[referenceId] of specified function.","required":true,"type":"string"},{"name":"wcp_logs","in":"query","description":"When true, the response will be wrapped in a json object which includes logs. See models \\\"logExecResponse\\\" and \\\"logJsonExecResponse\\\". This action is Secured by the \\\"Function Service: Log Access\\\" Domain.","required":false,"type":"boolean"}],"responses":{"403":{"description":"forbidden","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"404":{"description":"not found","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"413":{"description":"request too large","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"429":{"description":"too many requests","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"default":{"description":"The function defined status and content response."}}},"patch":{"tags":["Exec"],"description":"Execute a function by proxy. Use the POST endpoint to execute a function that patches data. Function Service passes all request parameters to the function at runtime. You can append custom-defined parameters to the path so that your function implementation can process the custom values at runtime. For example, if you invoke \"/exec/Reference_Id=myFunction?myQueryParam=true\", your function receives the query parameter \"myQueryParam=true\" at runtime. If you invoke \"/exec/Reference_Id=myFunction/myPathValue/secondPathValue?myQueryParam=true\", your function receives the path \"myPathValue/secondPathValue\" and the query parameter \"myQueryParam=true\" at runtime.","parameters":[{"name":"id","in":"path","description":"Id or Reference_Id=[referenceId] of specified function.","required":true,"type":"string"},{"name":"wcp_logs","in":"query","description":"When true, the response will be wrapped in a json object which includes logs. See models \\\"logExecResponse\\\" and \\\"logJsonExecResponse\\\". This action is Secured by the \\\"Function Service: Log Access\\\" Domain.","required":false,"type":"boolean"}],"responses":{"403":{"description":"forbidden","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"404":{"description":"not found","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"413":{"description":"request too large","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"429":{"description":"too many requests","schema":{"$ref":"#/definitions/ERROR_MODEL_REFERENCE"}},"default":{"description":"The function defined status and content response."}}}}},"definitions":{"listFunctionsCollectionResponse":{"type":"object","description":"The functions ordered by created timestamp (newest first) for the provided limit and offset.","properties":{"total":{"type":"number","description":"The total number of functions in the tenant"},"data":{"type":"array","description":"The functions ordered by descending creation date.","items":{"$ref":"#/definitions/listFunctionsFunctionDefinition"}}}},"listFunctionsFunctionDefinition":{"type":"object","properties":{"name":{"type":"string","description":"Client defined name of the function."},"referenceId":{"type":"string","description":"Client defined reference id of the function that can be used to reference a function in the api url paths."},"description":{"type":"string","description":"Client defined description of the function."},"handler":{"type":"string","description":"Client defined runtime entry point into the function."},"runtime":{"type":"string","description":"Client defined language runtime."},"id":{"type":"string","description":"System generated unique id for the function."},"createdUserName":{"type":"string","description":"The username of the function creator."},"createdTimestamp":{"type":"string","description":"The create time stamp in ISO 8601 format","format":"date-time"},"lastUpdatedUserName":{"type":"string","description":"The username of the last updater."},"lastUpdatedTimestamp":{"type":"string","description":"The last update time stamp in ISO 8601 format","format":"date-time"}}},"functionDefinitionCreate":{"type":"object","properties":{"name":{"type":"string","example":"My function name"},"referenceId":{"type":"string","description":"Reference ID must contain only a-z, A-Z, 0-9, - (hyphen), or _ (underscore) and have up to maximum length of 128.","pattern":"^(?:[a-zA-Z0-9]|[\\-_]){1,128}$","example":"myFunction"},"description":{"type":"string","example":"My function description."},"handler":{"type":"string","description":"The entry point to your function. Determined by the runtime and your function's name.","example":"com.example.MyFunction::invoke"},"runtime":{"type":"string","description":"The runtime language of your function. Limited to java8.","example":"java8"}}},"functionDefinitionViewResponse":{"type":"object","properties":{"name":{"type":"string","description":"Client defined name of the function."},"referenceId":{"type":"string","description":"Client defined reference id of the function that can be used to reference a function in the api url paths."},"description":{"type":"string","description":"Client defined description of the function."},"handler":{"type":"string","description":"Client defined runtime entry point into the function."},"runtime":{"type":"string","description":"Client defined language runtime."},"id":{"type":"string","description":"System generated unique id for the function."},"createdUserName":{"type":"string","description":"The username of the function creator."},"createdTimestamp":{"type":"string","description":"The create time stamp in ISO 8601 format","format":"date-time"},"lastUpdatedUserName":{"type":"string","description":"The username of the last updater."},"lastUpdatedTimestamp":{"type":"string","description":"The last update time stamp in ISO 8601 format","format":"date-time"},"codeVersion":{"type":"number","description":"The version of the deployed code runtime. Only increments when the code changes. Field is missing when 0."}}},"functionDefinitionUpdateResponse":{"type":"object","properties":{"name":{"type":"string","description":"Client defined name of the function."},"referenceId":{"type":"string","description":"Client defined reference id of the function that can be used to reference a function in the api url paths."},"description":{"type":"string","description":"Client defined description of the function."},"handler":{"type":"string","description":"Client defined runtime entry point into the function."},"runtime":{"type":"string","description":"Client defined language runtime."},"id":{"type":"string","description":"System generated unique id for the function."},"createdUserName":{"type":"string","description":"The username of the function creator."},"createdTimestamp":{"type":"string","description":"The create time stamp in ISO 8601 format","format":"date-time"},"lastUpdatedUserName":{"type":"string","description":"The username of the last updater."},"lastUpdatedTimestamp":{"type":"string","description":"The last update time stamp in ISO 8601 format","format":"date-time"},"codeUploadUrl":{"type":"string","description":"The code upload url to complete the function deployment. Send a PUT request here with your code artifact as the binary body. Set two headers in the request, 'x-amz-server-side-encryption = aws:kms' and 'x-amz-server-side-encryption-aws-kms-key-id = [kmsKeyId]' where kmsKeyId is the value in this response.","format":"uri"},"kmsKeyId":{"type":"string","description":"A value used to upload your code artifact. Set the header value for 'x-amz-server-side-encryption-aws-kms-key-id' to this value for the codeUploadUrl."},"codeVersion":{"type":"number","description":"The version of the deployed code runtime. Only increments when the code changes. Field is optional when 0."}}},"functionDefinitionCreateResponse":{"type":"object","properties":{"name":{"type":"string","description":"Client defined name of the function."},"referenceId":{"type":"string","description":"Client defined reference id of the function that can be used to reference a function in the api url paths."},"description":{"type":"string","description":"Client defined description of the function."},"handler":{"type":"string","description":"Client defined runtime entry point into the function."},"runtime":{"type":"string","description":"Client defined language runtime."},"id":{"type":"string","description":"System generated unique id for the function."},"createdUserName":{"type":"string","description":"The username of the function creator."},"createdTimestamp":{"type":"string","description":"The create time stamp in ISO 8601 format","format":"date-time"},"lastUpdatedUserName":{"type":"string","description":"The username of the last updater."},"lastUpdatedTimestamp":{"type":"string","description":"The last update time stamp in ISO 8601 format","format":"date-time"},"codeUploadUrl":{"type":"string","description":"The code upload url to complete the function deployment. Send a PUT request here with your code artifact as the binary body. Set two headers in the request, 'x-amz-server-side-encryption = aws:kms' and 'x-amz-server-side-encryption-aws-kms-key-id = [kmsKeyId]' where kmsKeyId is the value in this response.","format":"uri"},"kmsKeyId":{"type":"string","description":"A value used to upload your code artifact. Set the header value for 'x-amz-server-side-encryption-aws-kms-key-id' to this value for the codeUploadUrl."}}},"ERROR_MODEL_REFERENCE":{"type":"object","properties":{"error":{"type":"string","description":"A description of the error"}}},"plainTextResponse":{"type":"string","description":"Response message."},"logExecResponse":{"type":"object","properties":{"body":{"type":"string","description":"The non-json response from the function."},"logs":{"type":"string","description":"The newline delimited log statements with a timestamp prefix."}}},"logJsonExecResponse":{"type":"object","properties":{"body":{"type":"object","description":"The json response from the function if the response is mime type json."},"logs":{"type":"string","description":"The newline delimited log statements with a timestamp prefix."}}}}}